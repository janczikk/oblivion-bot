import logging
from aiogram import Bot, Dispatcher, types, executor
from aiogram.types import ReplyKeyboardRemove
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = int(os.getenv("ADMIN_ID"))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤ –∏ –±–æ—Ç–∞
logging.basicConfig(level=logging.INFO)
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

user_data = {}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ä—Ç–∞
@dp.message_handler(commands=['start'])
async def welcome(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç, —Ç—ã –ø–æ–ø–∞–ª –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –†–ü –ø—Ä–æ–µ–∫—Ç–∞ Oblivion RP\n\n–ù–∞–ø–∏—à–∏ —Å–≤–æ—ë –§–ò–û (–†–ü):")
    user_data[message.from_user.id] = {}

# –®–∞–≥–∏ –∞–Ω–∫–µ—Ç—ã
@dp.message_handler(lambda message: message.from_user.id in user_data and 'fio' not in user_data[message.from_user.id])
async def get_fio(message: types.Message):
    user_data[message.from_user.id]['fio'] = message.text
    await message.answer("–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç (—Ä–µ–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç)?")

@dp.message_handler(lambda message: message.from_user.id in user_data and 'age' not in user_data[message.from_user.id])
async def get_age(message: types.Message):
    user_data[message.from_user.id]['age'] = message.text
    await message.answer("–ß—Ç–æ —Ç–∞–∫–æ–µ Metagaming?")

@dp.message_handler(lambda message: message.from_user.id in user_data and 'mg' not in user_data[message.from_user.id])
async def get_mg(message: types.Message):
    user_data[message.from_user.id]['mg'] = message.text
    await message.answer("–ù–∞ –∫–∞–∫–∏—Ö –†–ü –ø—Ä–æ–µ–∫—Ç–∞—Ö —Ç—ã –µ—â–µ –∏–≥—Ä–∞–ª(–∞)?")

@dp.message_handler(lambda message: message.from_user.id in user_data and 'rp_history' not in user_data[message.from_user.id])
async def get_rp_history(message: types.Message):
    user_data[message.from_user.id]['rp_history'] = message.text
    data = user_data[message.from_user.id]

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∞–Ω–∫–µ—Ç—É –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—É
    summary = f"üì® –ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞:\n\n" \
              f"üë§ –§–ò–û (–†–ü): {data['fio']}\n" \
              f"üéÇ –í–æ–∑—Ä–∞—Å—Ç: {data['age']}\n" \
              f"üìò Metagaming: {data['mg']}\n" \
              f"üïπÔ∏è –†–ü-–æ–ø—ã—Ç: {data['rp_history']}"
    
    await bot.send_message(ADMIN_ID, summary)
    await message.answer("‚úÖ –°–ø–∞—Å–∏–±–æ! –¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ.", reply_markup=ReplyKeyboardRemove())
    user_data.pop(message.from_user.id)

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)

